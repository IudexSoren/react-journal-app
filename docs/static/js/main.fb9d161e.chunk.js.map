{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/loading/LoadingScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","saveNote","getState","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","noteDate","moment","date","className","format","multiple","style","display","onChange","e","files","filter","i","length","filesUrl","text","allowOutsideClick","didOpen","showLoading","setTimeout","urls","console","log","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","autoComplete","placeholder","map","url","src","alt","delete","NothingSelected","class","setError","error","removeError","startLoading","finishLoading","login","displayName","logout","JournalEntry","image","backgroundSize","backgroundImage","backgroundPosition","justifyContent","alignItems","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","ui","msgError","loading","email","password","isFormValid","messages","trim","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","err","message","startLoginEmailPassword","disabled","signInWithPopup","to","RegisterScreen","confpassword","validator","isEmail","equals","createUserWithEmailAndPassword","updateProfile","startRegisterEmailPasswordName","AuthRouter","path","component","exact","LoadingScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","search","propType","PropTypes","bool","isRequired","func","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fb9d161e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCAAzQJfSR2_wU6_SHJlkvYP8w3UhZIBUA\",\r\n  authDomain: \"react-app-courses-b7352.firebaseapp.com\",\r\n  projectId: \"react-app-courses-b7352\",\r\n  storageBucket: \"react-app-courses-b7352.appspot.com\",\r\n  messagingSenderId: \"225831865721\",\r\n  appId: \"1:225831865721:web:4c4829194c24720c9ef3a8\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Referencia a la base de datos\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n  db,\r\n  googleAuthProvider,\r\n  firebase\r\n}","export const fileUpload = async (file) => {\r\n  const cloudUrl = 'https://api.cloudinary.com/v1_1/dbzei34n4/upload';\r\n  const formData = new FormData();\r\n  formData.append('upload_preset', 'react-journal');\r\n  formData.append('file', file);\r\n  try {\r\n    const resp = await fetch(cloudUrl, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n    if (resp.ok) {\r\n      const cloudResp = await resp.json();\r\n      return await cloudResp.secure_url;\r\n    } else {\r\n      throw await resp.json();\r\n    }\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n  const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n  const notes = [];\r\n  notesSnap.forEach(snapChild => {\r\n    notes.push({\r\n      id: snapChild.id,\r\n      ...snapChild.data()\r\n    });\r\n  });\r\n\r\n  return notes;\r\n}","export const types = {\r\n  login: '[AUTH] Login',\r\n  logout: '[AUTH] Logout',\r\n\r\n  uiSetError: '[UI] Set Error',\r\n  uiRemoveError: '[UI] Remove Error',\r\n\r\n  uiStartLoading: '[UI] Start loading',\r\n  uiFinishLoading: '[UI] Finish loading',\r\n\r\n  notesAddEntry: '[Notes] New note',\r\n  notesActiveEntry: '[Notes] Set active note',\r\n  notesLoad: '[Notes] Load notes',\r\n  notesUpdate: '[Notes] Update note',\r\n  notesFilesUrl: '[Notes] Update images url',\r\n  notesDelete: '[Notes] Delete note',\r\n  notesLogoutCleaning: '[Notes] Logout cleaning',\r\n\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from '../firebase/firebase-config';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\nexport const startNewNote = () => {\r\n  return async (dispatch, getState) => {\r\n    // Obtener id del usuario\r\n    const { uid } = getState().auth;\r\n    const newNote = {\r\n      title: '',\r\n      body: '',\r\n      date: new Date().getTime(),\r\n      urls: []\r\n    }\r\n    // Agregar datos a una colección\r\n    const doc = await db.collection(`${ uid }/journal/notes`).add(newNote);\r\n    dispatch(activeNote(doc.id, newNote));\r\n    dispatch(addNewNote(doc.id, newNote));\r\n  }\r\n}\r\n\r\nexport const activeNote = (id, note) => {\r\n  return {\r\n    type: types.notesActiveEntry,\r\n    payload: {\r\n      id,\r\n      ...note\r\n    }\r\n  }\r\n}\r\n\r\nexport const addNewNote = (id, note) => {\r\n  return {\r\n    type: types.notesAddEntry,\r\n    payload: {\r\n      id,\r\n      ...note\r\n    }\r\n  }\r\n}\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n  return async (dispatch) => {\r\n    const notes = await loadNotes(uid);\r\n    dispatch(setNotes(notes));\r\n  }\r\n}\r\n\r\nexport const setNotes = (notes) => {\r\n  return {\r\n    type: types.notesLoad,\r\n    payload: notes\r\n  }\r\n}\r\n\r\nexport const saveNote = (note) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth;\r\n    const noteToFirestore = { ...note };\r\n    // Remover el atributo ID para que no sea almacenado en Firestore\r\n    delete noteToFirestore.id;\r\n    await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\r\n    dispatch(refreshNote(note.id, note));\r\n    Swal.fire('Saved', note.title, 'success');\r\n  }\r\n}\r\n\r\nexport const refreshNote = (id, note) => {\r\n  return {\r\n    type: types.notesUpdate,\r\n    payload: {\r\n      id,\r\n      note\r\n    }\r\n  }\r\n}\r\n\r\nexport const startUploading = (files) => {\r\n  return async (dispatch, getState) => {\r\n    const { active } = getState().notes;\r\n    const filesUrl = [];\r\n    Swal.fire({\r\n      title: 'Uploading...',\r\n      text: 'Please wait',\r\n      allowOutsideClick: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n    await files.forEach(async (file) => {\r\n      filesUrl.push(await fileUpload(file));\r\n    });\r\n    setTimeout(() => {\r\n      active.urls = filesUrl;\r\n      console.log(active);\r\n      dispatch(saveNote(active));\r\n      Swal.close();\r\n    }, files.length * 3 * 1000);\r\n  }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth;\r\n    await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n    dispatch(deleteNote(id));\r\n  }\r\n}\r\n\r\nexport const deleteNote = (id) => {\r\n  return {\r\n    type: types.notesDelete,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const noteLogoutCleaning = () => {\r\n  return {\r\n    type: types.notesLogoutCleaning\r\n  }\r\n}","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    const [values, setValues] = useState(initialState);\r\n    \r\n    const reset = ( newState = initialState ) => {\r\n        setValues( newState );\r\n    }\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveNote, startUploading } from '../../actions/notes';\r\n\r\n\r\nconst NotesAppBar = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { active } = useSelector(state => state.notes);\r\n\r\n  const noteDate = moment(active.date);\r\n\r\n  const handleSaveNote = () => {\r\n    dispatch(saveNote(active));\r\n  }\r\n\r\n  const handleAddPictures = () => {\r\n    document.querySelector('#addPictures').click();\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    let files = [...e.target.files];\r\n    files = files.filter((file, i) => (i < 3) && file);\r\n    if (files.length !== 0) {\r\n      dispatch(startUploading(files));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"notes__appbar\">\r\n      <div className=\"notes__appbar-date\">\r\n        <i className=\"far fa-calendar-alt\"></i>\r\n        <span>{`${ noteDate.format('D') } ${ noteDate.format('MMMM') } ${ noteDate.format('YYYY') }`}</span>\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        id=\"addPictures\"\r\n        name=\"file\"\r\n        multiple\r\n        style={{ display: \"none\" }}\r\n        onChange={ handleFileChange }\r\n      />\r\n      <div>\r\n        <button className=\"btn pointer\" onClick={ handleAddPictures }>\r\n          <i className=\"far fa-image\"></i>\r\n          <span>Add Pictures</span>\r\n        </button>\r\n        <button className=\"btn btn-important pointer\" onClick={ handleSaveNote }>\r\n          <i className=\"far fa-save\"></i>\r\n          <span>Save</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotesAppBar\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { activeNote, startDeleting } from \"../../actions/notes\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport NotesAppBar from \"./NotesAppBar\"\r\n\r\n\r\nconst NoteScreen = () => {\r\n\r\n  const { active: note } = useSelector(state => state.notes);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [ formValues, handleInputChange, reset ] = useForm(note);\r\n\r\n  // Se debe obtener la imagen de note, debido a que no puede establecerse como parte del formValues por ser un arreglo (?)\r\n  const { body, title } = formValues;\r\n  const { urls } = note;\r\n\r\n  const activeId = useRef(note.id);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startDeleting(activeId.current));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeId.current !== note.id) {\r\n      reset(note);\r\n      activeId.current = note.id;\r\n    }\r\n  }, [note, reset]);\r\n\r\n  // Actualizar cambios (Sin guardarlos en la base de datos) en la nota activa\r\n  useEffect(() => {\r\n    dispatch(activeNote(formValues.id, { ...formValues }));\r\n  }, [formValues, dispatch]);\r\n\r\n  return (\r\n    <div className=\"notes__main-content animate__animated animate__slideInRight\" >\r\n      <NotesAppBar />\r\n      <div className=\"notes__content\">\r\n        <input\r\n          autoComplete=\"off\"\r\n          type=\"text\"\r\n          placeholder=\"An awesome title...\"\r\n          name=\"title\"\r\n          value={ title }\r\n          className=\"notes__title-input\"\r\n          onChange={ handleInputChange } />\r\n        <textarea\r\n          name=\"body\"\r\n          value={ body }\r\n          placeholder=\"What happened today?\"\r\n          className=\"notes__textarea\"\r\n          onChange={ handleInputChange }\r\n        ></textarea>\r\n        {\r\n          (urls) && ((urls.length !== 0) &&\r\n          <div className=\"notes__image animate__animated animate__slideInUp\" >\r\n            {urls.map((url, i) =>\r\n              <img\r\n                className=\"animate__animated animate__fadeIn\"\r\n                key={ i }\r\n                src={`${ url }`}\r\n                alt={ `JournalImage ${ i }` }\r\n              />\r\n            )}\r\n          </div>)\r\n        }\r\n      </div>\r\n      <button className=\"btn btn-danger pointer\" onClick={ handleDelete }>Delete entry</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteScreen\r\n","\r\n\r\nconst NothingSelected = () => {\r\n  return (\r\n    <div className=\"nothing__main-content animate__animated animate__slideInRight\">\r\n      <h1>Create an entry</h1>\r\n      <br/>\r\n      <h4>or</h4>\r\n      <br/>\r\n      <h3>Select one of the already created</h3>\r\n      <i class=\"fas fa-pen-square fa-4x mt-5 animate__animated animate__rotateIn animate__delay-1s\"></i>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NothingSelected\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (error) => {\r\n  return {\r\n    type: types.uiSetError,\r\n    payload: error\r\n  }\r\n}\r\n\r\nexport const removeError = () => {\r\n  return {\r\n    type: types.uiRemoveError\r\n  }\r\n}\r\n\r\nexport const startLoading = () => {\r\n  return {\r\n    type: types.uiStartLoading\r\n  }\r\n}\r\n\r\nexport const finishLoading  = () => {\r\n  return {\r\n    type: types.uiFinishLoading\r\n  }\r\n}","import Swal from 'sweetalert2';\r\nimport { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport { noteLogoutCleaning } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then(({ user }) => {\r\n      dispatch(login(user.uid, user.displayName));\r\n      dispatch(finishLoading());\r\n    })\r\n    .catch(err => {\r\n      dispatch(finishLoading());\r\n      // Mostrar errores utilizando la librería de sweet alert 2\r\n      Swal.fire('Error', err.message, 'error');\r\n    });\r\n  }\r\n}\r\n\r\nexport const startRegisterEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase.auth().createUserWithEmailAndPassword(email, password)\r\n    .then(async({ user }) => {\r\n      await user.updateProfile({ displayName: name });\r\n      dispatch(login(user.uid, user.displayName));\r\n      dispatch(finishLoading());\r\n    })\r\n    .catch(err => {\r\n      dispatch(finishLoading());\r\n      // Mostrar errores utilizando la librería de sweet alert 2\r\n      Swal.fire('Error', err.message, 'error');\r\n    });\r\n  }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase.auth().signInWithPopup(googleAuthProvider)\r\n    .then(({ user }) => {\r\n      dispatch(login(user.uid, user.displayName))\r\n    });\r\n  }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n  return {\r\n    type: types.login,\r\n    payload: {\r\n      uid,\r\n      displayName\r\n    }\r\n  }\r\n}\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n    dispatch(logout());\r\n    dispatch(noteLogoutCleaning());\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: types.logout\r\n  }\r\n}","import moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nconst JournalEntry = ({ id, title, body, date, urls = [] }) => {\r\n\r\n  const noteDate = moment(date);\r\n\r\n  const image = urls.length !== 0 && urls[0];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEntryClick = () => {\r\n    dispatch(activeNote(id, {\r\n      title,\r\n      body,\r\n      date,\r\n      urls\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"journal__entry animate__animated animate__flipInX pointer\" onClick={ handleEntryClick }>\r\n      <div\r\n        className=\"journal__entry-picture animate__animated animate__fadeIn\"\r\n        style={{\r\n          backgroundSize: 'cover',\r\n          backgroundImage: `url(${ (image) && image })`,\r\n          backgroundPosition: 'center',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          {\r\n            (image) ? '' : <i class=\"fas fa-images fa-3x\"></i>\r\n          }\r\n      </div>\r\n      <div className=\"journal__entry-body\">\r\n        <p className=\"journal__entry-title mb-1\">\r\n          { title }\r\n        </p>\r\n        <p className=\"journal__entry-content\">\r\n          { body }\r\n        </p>\r\n      </div>\r\n      <div className=\"journal__entry-date-box\">\r\n        <span>{ noteDate.format('dddd') }</span>\r\n        <h4>{ noteDate.format('Do') }</h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JournalEntry\r\n","import { useSelector } from \"react-redux\";\r\nimport JournalEntry from \"./JournalEntry\";\r\n\r\n\r\nconst JournalEntries = () => {\r\n\r\n  const { notes } = useSelector(state => state.notes);\r\n\r\n  return (\r\n    <div className=\"journal__entries mb-5\">\r\n      {\r\n        notes.map((note) =>\r\n        <JournalEntry\r\n          key={ note.id } { ...note }\r\n        />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JournalEntries\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { startNewNote } from \"../../actions/notes\";\r\nimport JournalEntries from \"./JournalEntries\"\r\n\r\n\r\nconst Sidebar = ({ notes }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { name } = useSelector(state => state.auth);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n\r\n  }\r\n\r\n  const handleAddEntry = () => {\r\n    dispatch(startNewNote());\r\n  }\r\n\r\n  return (\r\n    <aside className=\"journal__sidebar animate__animated animate__slideInLeft\">\r\n      <div className=\"journal__siderbar-navbar\">\r\n        <h3 className=\"mt-5\">\r\n          <i className=\"far fa-user\"></i>\r\n          <span>{ name }</span>\r\n        </h3>\r\n        <button className=\"btn pointer mt-5\" onClick={ handleLogout }>\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n          <span> Logout</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"journal__new-entry pointer\" onClick={ handleAddEntry }>\r\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n        <p className=\"mt-5\">New entry</p>\r\n      </div>\r\n      <JournalEntries />\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import { useSelector } from \"react-redux\";\r\nimport NoteScreen from \"../notes/NoteScreen\";\r\nimport NothingSelected from \"./NothingSelected\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\n\r\nconst JournalScreen = () => {\r\n\r\n  const { active } = useSelector(state => state.notes);\r\n\r\n  return (\r\n    <div className=\"journal__main-content\">\r\n      <Sidebar />\r\n      <main>\r\n        {\r\n          (active) ? <NoteScreen /> : <NothingSelected />\r\n        }\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JournalScreen;\r\n","import { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nconst LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { msgError, loading } = useSelector(state => state.ui);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: 'mendezaa4417@protonmail.com',\r\n    password: 'soren616'\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (isFormValid()) {\r\n      dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const messages = [];\r\n    if (email.trim().length === 0) {\r\n      messages.push('Email is required');\r\n    }\r\n    if (password.trim().length === 0) {\r\n      messages.push('Password is required');\r\n    }\r\n    if (messages.length > 0) {\r\n      dispatch(setError(messages));\r\n\r\n      return false;\r\n    }\r\n    dispatch(removeError());\r\n\r\n    return true\r\n  }\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title mb-5\">Login</h3>\r\n      <form onSubmit={ handleLogin }>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input mt-1\"\r\n          autoComplete=\"off\"\r\n          value={ email }\r\n          onChange={ handleInputChange } />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input mt-1\"\r\n          value={ password }\r\n          onChange={ handleInputChange } />\r\n        {\r\n          (msgError != null) &&\r\n            (<div className=\"auth__alert-error\">\r\n              { msgError.map(\r\n              (err, i) =>\r\n                <p key={ i }>{ err }</p>\r\n              )}\r\n            </div>)\r\n        }\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-block pointer mb-5 mt-1\"\r\n          disabled={ loading } >\r\n          Login\r\n        </button>\r\n        <div className=\"auth__social-networks\">\r\n          <p className=\"mb-1\">Login with...</p>\r\n          <div className=\"google-btn\" onClick={ handleGoogleLogin }>\r\n            <div className=\"google-icon-wrapper\">\r\n              <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Link\r\n          to=\"/auth/register\"\r\n          className=\"link\">\r\n            Create an account\r\n        </Link>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startRegisterEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst RegisterScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  // UseSelector brinda el estado de los reducers de Redux\r\n  // Extraer el error\r\n  const { msgError, loading } = useSelector(state => state.ui);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: 'mendezaa4417@protonmail.com',\r\n    name: 'IudexSoren',\r\n    password: 'soren616',\r\n    confpassword: 'soren616'\r\n  });\r\n\r\n  const { email, name, password, confpassword } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterEmailPasswordName(email, password, name));\r\n      console.log('Success');\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const messages = [];\r\n    if (email.trim().length === 0) {\r\n      messages.push('Email is required');\r\n    } else if (!validator.isEmail(email)) {\r\n      messages.push('Invalid email');\r\n    }\r\n    if (name.trim().length === 0) {\r\n      messages.push('Name is required');\r\n    }\r\n    if (password.trim().length < 8) {\r\n      messages.push('Password must be at least 8 characters');\r\n    } else if (confpassword.trim().length === 0) {\r\n      messages.push('You must confirm your password');\r\n    } else if (!validator.equals(password, confpassword)) {\r\n      messages.push('Passwords do not match');\r\n    }\r\n    if (messages.length > 0) {\r\n      dispatch(setError(messages));\r\n\r\n      return false;\r\n    }\r\n    dispatch(removeError());\r\n\r\n    return true\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Register</h3>\r\n      <form onSubmit={ handleRegister }>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input mt-1\"\r\n          autoComplete=\"off\"\r\n          value={ email }\r\n          onChange={ handleInputChange } />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          className=\"auth__input mt-1\"\r\n          autoComplete=\"off\"\r\n          value={ name }\r\n          onChange={ handleInputChange } />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input mt-1\"\r\n          value={ password }\r\n          onChange={ handleInputChange } />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm password\"\r\n          name=\"confpassword\"\r\n          className=\"auth__input mt-1\"\r\n          value={ confpassword }\r\n          onChange={ handleInputChange } />\r\n          {\r\n            (msgError != null) &&\r\n              (<div className=\"auth__alert-error\">\r\n                { msgError.map(\r\n                (err, i) =>\r\n                  <p key={ i }>{ err }</p>\r\n                )}\r\n              </div>)\r\n          }\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-block pointer mb-5 mt-1\"\r\n          disabled={ loading } >\r\n          Register\r\n        </button>\r\n        <Link\r\n          to=\"/auth/login\"\r\n          className=\"link\">\r\n            Log in\r\n        </Link>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport RegisterScreen from '../components/auth/RegisterScreen';\r\n\r\nconst AuthRouter = () => {\r\n  return (\r\n    <div className=\"auth__main\" >\r\n      <div className=\"auth__box-container animate__animated animate__fadeIn\" >\r\n        <Switch>\r\n          <Route path='/auth/login' component={ LoginScreen } />\r\n          <Route path='/auth/register' component={ RegisterScreen } exact />\r\n\r\n          <Redirect to='/auth/login' />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthRouter\r\n","\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"loading__loading-container\">\r\n      <h1>Wait a moment...\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingScreen\r\n","import PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={ (props) =>\r\n        (!isAuthenticated) ? (<Component {...props} />) : (<Redirect to='/' />)\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute\r\n","import PropTypes from 'prop-types';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  localStorage.setItem('lastPath', `${ rest.location.pathname }${ rest.location.search }`);\r\n\r\n  return (\r\n    <Route\r\n      { ...rest }\r\n      component={ (props) =>\r\n        (isAuthenticated) ? (<Component {...props} />) : (<Redirect to='/auth/login' />)\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propType = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { useEffect, useState } from 'react';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport JournalScreen from '../components/journal/JournalScreen';\r\nimport AuthRouter from './AuthRouter';\r\nimport { login } from '../actions/auth';\r\nimport LoadingScreen from '../components/loading/LoadingScreen';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nconst AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // Mantener sesión del usuario\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async(user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true);\r\n        dispatch(startLoadingNotes(user.uid));\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n  // Se mostrará este componente mientras se estén analizando los datos para la autenticación\r\n  if (checking) {\r\n    return (\r\n      <LoadingScreen/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <PublicRoute isAuthenticated={ isLoggedIn } path='/auth' component={ AuthRouter } />\r\n            <PrivateRoute isAuthenticated={ isLoggedIn } path='/' component={ JournalScreen } exact />\r\n\r\n            <Redirect to='/auth/login' />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.notesActiveEntry:\r\n      return {\r\n        ...state,\r\n        active: {\r\n          ...action.payload\r\n        }\r\n      }\r\n    case types.notesAddEntry:\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes, action.payload]\r\n      };\r\n    case types.notesLoad:\r\n      return {\r\n        ...state,\r\n        notes: [...action.payload]\r\n      }\r\n    case types.notesUpdate:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.map(note =>\r\n          (note.id === action.payload.id) ? action.payload.note : note )\r\n      }\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n        notes: state.notes.filter(note =>\r\n          note.id !== action.payload\r\n        )\r\n      }\r\n    case types.notesLogoutCleaning:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload\r\n      };\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null\r\n      }\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName\r\n      };\r\n    case types.logout:\r\n      return { };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { Provider } from 'react-redux'\r\nimport AppRouter from \"./routers/AppRouter\";\r\nimport { store } from './store/store';\r\n\r\nconst JournalApp = () => {\r\n  return (\r\n    <Provider store={ store }>\r\n      <AppRouter />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default JournalApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}